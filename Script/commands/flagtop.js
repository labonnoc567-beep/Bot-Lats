const fs = require("fs-extra");
const path = require("path");

module.exports.config = {
  name: "flagtop",
  version: "1.0.0",
  hasPermssion: 0,
  credits: "ЁЯТлButterflyЁЯжЛ SizuЁЯТЯ & Maruf SystemЁЯТл",
  description: "Show top scorers in flag game",
  commandCategory: "game",
  usages: "[flagtop]",
  cooldowns: 5
};

const scoreFile = path.join(__dirname, "flagdata.json");

module.exports.run = async ({ api, event, Users }) => {
  const { threadID } = event;
  let scores = {};
  try {
    scores = JSON.parse(fs.readFileSync(scoreFile));
  } catch (e) {
    return api.sendMessage("тЪая╕П ржХрзЛржирзЛ рж╕рзНржХрзЛрж░ ржЦрзБржБржЬрзЗ ржкрж╛ржУрзЯрж╛ ржпрж╛рзЯржирж┐!", threadID);
  }

  const sorted = Object.entries(scores).sort((a, b) => b[1] - a[1]).slice(0, 10);
  if (sorted.length === 0) return api.sendMessage("ЁЯШФ ржПржЦржирзЛ ржХрзЗржЙ ржХрзЛржирзЛ ржкрзЯрзЗржирзНржЯ ржкрж╛рзЯржирж┐!", threadID);

  let msg = `ЁЯПЖ ржлрзНрж▓рзНржпрж╛ржЧ ржЧрзЗржо рж▓рж┐ржбрж╛рж░ржмрзЛрж░рзНржб:\n`;
  for (let i = 0; i < sorted.length; i++) {
    const [uid, point] = sorted[i];
    const name = await Users.getNameUser(uid);
    msg += `${i + 1}. ${name} тАФ ${point} ржкрзЯрзЗржирзНржЯ\n`;
  }

  return api.sendMessage(msg, threadID);
};
