// modules/commands/unsend.js

module.exports.config = {
  name: "unsend",
  version: "1.0.3",
  hasPermssion: 0,
  credits: "üí´Butterflyü¶ã Sizuüíü & Maruf Billah",
  description: "Reply ‡¶ï‡¶∞‡¶æ ‡¶¨‡¶æ ‡¶®‡¶ø‡¶∞‡ßç‡¶¶‡¶ø‡¶∑‡ßç‡¶ü messageID ‡¶¶‡ßá‡¶ì‡ßü‡¶æ ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶Ü‡¶®‡¶∏‡ßá‡¶®‡ßç‡¶° ‡¶ï‡¶∞‡ßÅ‡¶®",
  commandCategory: "admin",
  usages: "Reply ‡¶ï‡¶∞‡ßá .unsend\n‡¶¨‡¶æ\n.unsend <messageID>",
  cooldowns: 3
};

const BOT_OWNER_UID = "100070782965051"; // Maruf Billah

module.exports.run = async function ({ api, event, args }) {
  try {
    const threadID = event.threadID;
    const senderID = event.senderID;

    const threadInfo = await api.getThreadInfo(threadID);
    const adminIDs = threadInfo.adminIDs.map(admin => admin.id);
    const groupCreatorID = threadInfo.threadOwner;

    let targetMsgID = null;
    let targetSender = null;

    // 1. Reply ‡¶ï‡¶∞‡¶æ ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú
    if (event.type === "message_reply") {
      targetMsgID = event.messageReply.messageID;
      targetSender = event.messageReply.senderID;
    }
    // 2. messageID ‡¶Ü‡¶∞‡ßç‡¶ó‡ßÅ‡¶Æ‡ßá‡¶®‡ßç‡¶ü‡ßá
    else if (args[0]) {
      targetMsgID = args[0];
    }

    if (!targetMsgID) {
      return api.sendMessage(
        "‡¶Ø‡ßá ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶Ü‡¶®‡¶∏‡ßá‡¶®‡ßç‡¶° ‡¶ï‡¶∞‡¶§‡ßá ‡¶ö‡¶æ‡¶ì ‡¶∏‡ßá‡¶ü‡¶æ‡¶§‡ßá reply ‡¶¶‡¶æ‡¶ì ‡¶¨‡¶æ `.unsend <messageID>` ‡¶≤‡ßá‡¶ñ‡ßã‡•§",
        threadID,
        event.messageID
      );
    }

    // ‡¶™‡¶æ‡¶∞‡¶Æ‡¶ø‡¶∂‡¶® ‡¶ö‡ßá‡¶ï
    const isBotOwner = senderID === BOT_OWNER_UID;
    const isGroupAdmin = adminIDs.includes(senderID);
    const isGroupOwner = senderID === groupCreatorID;
    const isSelfUnsend = targetSender === senderID;

    if (!(isBotOwner || isGroupAdmin || isGroupOwner || isSelfUnsend)) {
      return api.sendMessage(
        "‚ùå ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶∂‡ßÅ‡¶ß‡ßÅ ‡¶®‡¶ø‡¶ú‡ßá‡¶∞ ‡¶Æ‡ßá‡¶∏‡ßá‡¶ú ‡¶Ü‡¶®‡¶∏‡ßá‡¶®‡ßç‡¶° ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡ßã!\n‡¶Ö‡¶•‡¶¨‡¶æ ‡¶¨‡¶ü ‡¶Æ‡¶æ‡¶≤‡¶ø‡¶ï/‡¶ó‡ßç‡¶∞‡ßÅ‡¶™ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶°‡¶Æ‡¶ø‡¶®/‡¶ó‡ßç‡¶∞‡ßÅ‡¶™ ‡¶ï‡ßç‡¶∞‡¶ø‡ßü‡ßá‡¶ü‡¶∞ ‡¶π‡¶§‡ßá ‡¶π‡¶¨‡ßá‡•§",
        threadID,
        event.messageID
      );
    }

    // ‡¶Ü‡¶®‡¶∏‡ßá‡¶®‡ßç‡¶° ‡¶ï‡¶∞‡ßã (with ‚úÖ reaction only)
    api.unsendMessage(targetMsgID, (err) => {
      if (err) {
        return api.sendMessage(`‚ùå ‡¶Ü‡¶®‡¶∏‡ßá‡¶®‡ßç‡¶° ‡¶ï‡¶∞‡¶§‡ßá ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá:\n${err}`, threadID, event.messageID);
      }
      // ‚úÖ React only
      api.setMessageReaction("‚úÖ", event.messageID, () => {}, true);
    });

  } catch (err) {
    return api.sendMessage(`‚ùå Error: ${err.message}`, event.threadID, event.messageID);
  }
};
