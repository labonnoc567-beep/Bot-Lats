const fs = require("fs");
const path = require("path");
const moment = require("moment-timezone");

module.exports.config = {
  name: "azan",
  version: "2.0.0",
  hasPermssion: 0,
  credits: "ЁЯТлButterflyЁЯжЛ SizuЁЯТЯ & Maruf SystemЁЯТл",
  description: "Auto-send Azan reminder using offline yearly timing",
  commandCategory: "utility",
  usages: "",
  cooldowns: 5
};

module.exports.run = async ({ api }) => {
  // Do nothing on command
};

module.exports.onLoad = async function ({ api }) {
  const TIMEZONE = "Asia/Dhaka";
  const CHECK_INTERVAL = 60 * 1000; // 1 minute
  const azanDataPath = path.join(__dirname, "..", "data", "azanTimes.json");

  if (!fs.existsSync(azanDataPath)) {
    console.error("тЭМ azanTimes.json not found!");
    return;
  }

  const azanTimes = JSON.parse(fs.readFileSync(azanDataPath, "utf-8"));
  let lastSent = "";

  const checkAzan = () => {
    const now = moment().tz(TIMEZONE);
    const dateKey = now.format("YYYY-MM-DD");
    const currentTime = now.format("HH:mm");

    const todayAzan = azanTimes[dateKey];
    if (!todayAzan) return;

    for (const [salah, time] of Object.entries(todayAzan)) {
      if (currentTime === time && lastSent !== dateKey + time) {
        const msg = `ЁЯЪ╕ржирж╛ржорж╛ржЬрзЗрж░ ржмрж┐рж░рждрж┐ЁЯЪ╕  
(${salah} ржУрзЯрж╛ржХрзНржд - ${time})

тА╝я╕П--ржЖржпрж╛ржи рж╣ржЪрзНржЫрзЗ --тА╝я╕П ЁЯШК

┬░┬░ржорж╛ржирзЗ ржЖрж▓рзНрж▓рж╛рж╣ рждрзЛржорж╛ржХрзЗ ржбрж╛ржХржЫрзЗ┬░┬░ ЁЯШН

┬░┬░рж╕ржмрж╛ржЗ ржирж╛ржорж╛ржЬ ржкржбрж╝рзЗ ржЖрж╕рзЛ┬░┬░ ЁЯд▓

тА╝я╕П--рж╣рждрзЗржУ рждрзЛ ржкрж╛рж░рзЗ ржЖрж▓рзНрж▓рж╛рж╣рж░ рж╕рж╛ржерзЗ ржПржЯрж╛ржЗ рждрзЛржорж╛рж░ рж╢рзЗрж╖ ржпрзЛржЧрж╛ржпрзЛржЧ --тА╝я╕П ЁЯТЩЁЯеА

ЁЯУ╡ NO TEXT ЁЯЪл @everyone  
ЁЯЪ╕ржирж╛ржорж╛ржЬрзЗрж░ ржмрж┐рж░рждрж┐ЁЯЪ╕`;

        for (const threadID of global.allThreadID || []) {
          api.sendMessage(msg, threadID);
        }
        lastSent = dateKey + time;
        console.log(`ЁЯФФ Azan sent for ${salah} at ${time}`);
      }
    }

    setTimeout(checkAzan, CHECK_INTERVAL);
  };

  checkAzan();
};
